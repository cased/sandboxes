name: CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          uv pip install ruff black mypy

      - name: Run ruff
        run: ruff check .

      - name: Check formatting with black
        run: black --check .

      - name: Run mypy
        run: mypy sandboxes/ --ignore-missing-imports

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install package
        run: |
          uv pip install -e .
          uv pip install pytest pytest-asyncio pytest-cov

      - name: Run unit tests
        run: |
          pytest tests/ -v --cov=sandboxes --cov-report=xml -m "not integration"

      - name: Upload coverage
        if: matrix.python-version == '3.11'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests

  integration:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install package with all providers
        run: |
          uv pip install -e ".[all]"
          uv pip install pytest pytest-asyncio

      - name: Set up Modal
        if: ${{ secrets.MODAL_TOKEN != '' }}
        run: |
          echo "${{ secrets.MODAL_TOKEN }}" | modal token set --token-from-stdin

      - name: Run Modal tests
        if: ${{ secrets.MODAL_TOKEN != '' }}
        run: |
          pytest tests/test_integration_modal.py -v

      - name: Run E2B tests
        if: ${{ secrets.E2B_API_KEY != '' }}
        env:
          E2B_API_KEY: ${{ secrets.E2B_API_KEY }}
        run: |
          pytest tests/test_integration_e2b.py -v

      - name: Run Daytona tests
        if: ${{ secrets.DAYTONA_API_KEY != '' }}
        env:
          DAYTONA_API_KEY: ${{ secrets.DAYTONA_API_KEY }}
        run: |
          pytest tests/test_integration_daytona.py -v

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install build tools
        run: |
          pip install build twine

      - name: Build package
        run: |
          python -m build

      - name: Check package
        run: |
          twine check dist/*

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/